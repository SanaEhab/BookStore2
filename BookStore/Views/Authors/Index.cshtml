@using BookStore.ViewModel
@model List<AuthorVM>
@section Title {
Authors
}
@section SubTitle {
show
}
@section Buttons {
	<a asp-controller="Authors" asp-action="Create" class="btn btn-primary">Create</a>
}
@if (!Model.Any())
{
	<div class="card-body">
		<div class="alert alert-danger alert-dismissible">
			<button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
			<h5><i class="icon fas fa-ban"></i> Alert!</h5>
			Danger alert preview. This alert is dismissable. A wonderful serenity has taken possession of my
			entire
			soul, like these sweet mornings of spring which I enjoy with my whole heart.
		</div>
	</div>

}
else
{
	<div class="card-body">
		<table class="table table-bordered">
			<thead>
				<tr>
					<th style="width: 10px">#</th>
					<th>Name</th>
					<th style="width:250px">Action</th>
				</tr>
			</thead>
			<tbody>

				@foreach (var item in Model)
				{
					<tr>
						<td>@item.Id</td>
						<td>@item.Name</td>
						<td>
							<a class="btn btn-primary btn-sm" asp-controller="Authors" asp-action="Edit" asp-route-id="@item.Id">
								Edit
								<i class="fas fa-edit"></i>
							</a>
							<a class="btn btn-secondary btn-sm" asp-controller="Authors" asp-action="Details" asp-route-id="@item.Id">
								Details
								<i class="fas fa-info-circle"></i>
							</a>
							<a class="btn btn-danger btn-sm js-delete" href="#" data-id="@item.Id">
								Delete
								<i class="fas fa-trash-alt"></i>
							</a>
						</td>
					</tr>
				}

			</tbody>
		</table>
	</div>
}

@section Scripts {
	<script>
		document.querySelectorAll(".js-delete").forEach((btn) => {
			btn.addEventListener("click",async()=>{
				Swal.fire({
					title: "Are you sure?",
					text: "You won't be able to revert this!",
					icon: "warning",
					showCancelButton: true,
					confirmButtonColor: "#3085d6",
					cancelButtonColor: "#d33",
					confirmButtonText: "Yes, delete it!"
				}).then(async (result) => {
					if (result.isConfirmed) {
						//to have the value of the custom attribut data-id
						//you can use the getAttribute
						const id = btn.dataset.id;
						const response = await fetch(`/Authors/Delete/${id}`, {
							method: 'POST'
						});
						//if the request to the database is ok then remove the closest tr element without refresh
						if (response.ok) {
							btn.closest("tr").remove();
							const Toast = Swal.mixin({
								toast: true,
								position: 'top-end',
								showConfirmButton: false,
								timer: 3000,
								timerProgressBar: true,
							})
							Toast.fire({
								icon: 'success',
								title: 'Author deleted succesfully',
							})
						}

					}
				});
			})
		})
	</script>
}
